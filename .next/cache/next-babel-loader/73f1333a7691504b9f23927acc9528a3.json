{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store'; // const MyApp = (props: any): any => {\n//     const { Component, pageProps, store } = props;\n//     console.log(props);\n//     return (\n//         <Provider store={store}>\n//             {/* <>Hello</> */}\n//             <Component {...pageProps} />\n//         </Provider>\n//         // {\n//         /* {<Component {...pageProps} />} */\n//         // }\n//     );\n// };\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    console.log('this.props', this.props.Component);\n    return __jsx(React.Fragment, null) // <Provider store={store}>\n    //     <Component {...pageProps} />\n    // </Provider>\n    ;\n  }\n\n} // export default MyApp;\n//makeStore function that returns a new store for every request\n\n\nconst makeStore = () => initialStore; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/_app.tsx"],"names":["React","App","withRedux","initialStore","MyApp","getInitialProps","Component","ctx","pageProps","render","store","props","console","log","makeStore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAN,SAAoBH,GAApB,CAAwB;AACpB,eAAaI,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC7C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAAEC,MAAAA,SAAS,EAAEA;AAAb,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAgB;AAClB,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKF,KAAL,CAAWL,SAArC;AACA,WACI,2BADJ,CAEI;AACA;AACA;AAJJ;AAMH;;AAhBmB,C,CAmBxB;AAEA;;;AACA,MAAMQ,SAAS,GAAG,MAAMX,YAAxB,C,CAEA;;;AACA,eAAeD,SAAS,CAACY,SAAD,CAAT,CAAqBV,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store';\n\n// const MyApp = (props: any): any => {\n//     const { Component, pageProps, store } = props;\n//     console.log(props);\n//     return (\n//         <Provider store={store}>\n//             {/* <>Hello</> */}\n//             <Component {...pageProps} />\n//         </Provider>\n//         // {\n//         /* {<Component {...pageProps} />} */\n//         // }\n//     );\n// };\nclass MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return { pageProps: pageProps };\n    }\n\n    render(): JSX.Element {\n        const { Component, pageProps, store } = this.props as any;\n        console.log('this.props', this.props.Component);\n        return (\n            <></>\n            // <Provider store={store}>\n            //     <Component {...pageProps} />\n            // </Provider>\n        );\n    }\n}\n\n// export default MyApp;\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => initialStore;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}