{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Posts from '../components/PostsList/PostsList';\nimport * as blogSelectors from '../redux/blog/blogSelectors';\nimport * as blogOperations from '../redux/blog/blogOperations';\n\nconst App = ({\n  posts,\n  getPosts,\n  isLoading\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return __jsx(React.Fragment, null, posts && __jsx(Posts, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 24\n    }\n  }), \" fghjk\");\n};\n\nconst mapStateToProps = store => ({\n  posts: blogSelectors.getPosts(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: () => dispatch(blogOperations.getPosts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/index.tsx"],"names":["React","useEffect","connect","Posts","blogSelectors","blogOperations","App","posts","getPosts","isLoading","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B;AACA,OAAO,KAAKC,cAAZ,MAAgC,8BAAhC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AAC5CR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGA,SAAO,4BAAGD,KAAK,IAAI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,WAAP;AACH,CALD;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,KAAK,EAAEH,aAAa,CAACI,QAAd,CAAuBG,KAAvB;AADyB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCL,EAAAA,QAAQ,EAAE,MAAYK,QAAQ,CAACR,cAAc,CAACG,QAAf,EAAD;AADQ,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Posts from '../components/PostsList/PostsList';\nimport * as blogSelectors from '../redux/blog/blogSelectors';\nimport * as blogOperations from '../redux/blog/blogOperations';\n\nconst App = ({ posts, getPosts, isLoading }) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n    return <>{posts && <Posts posts={posts} />} fghjk</>;\n};\n\nconst mapStateToProps = (store) => ({\n    posts: blogSelectors.getPosts(store),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPosts: (): void => dispatch(blogOperations.getPosts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}