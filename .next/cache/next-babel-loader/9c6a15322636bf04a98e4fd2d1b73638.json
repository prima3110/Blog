{"ast":null,"code":"import * as blogActions from './blogActions';\nimport * as API from '../../services/api';\nexport const getPosts = () => dispatch => {\n  dispatch(blogActions.getPostsStart());\n  API.getPosts().then(res => {\n    console.log(res);\n\n    if (res.data) {\n      dispatch(blogActions.getPostsSuccess(res.data));\n    }\n  }).catch(err => dispatch(blogActions.getPostsError(err)));\n};\nexport const getPost = id => dispatch => {\n  dispatch(blogActions.getPostStart());\n  API.getPostById(id).then(res => dispatch(blogActions.getPostSuccess(res.data))).catch(err => dispatch(blogActions.getPostError(err)));\n};\nexport const createPost = post => dispatch => {\n  dispatch(blogActions.createPostStart());\n  API.createPost(post).then(res => dispatch(blogActions.createPostSuccess(res.data))).catch(err => dispatch(blogActions.createPostError(err)));\n};","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/redux/blog/blogOperations.ts"],"names":["blogActions","API","getPosts","dispatch","getPostsStart","then","res","console","log","data","getPostsSuccess","catch","err","getPostsError","getPost","id","getPostStart","getPostById","getPostSuccess","getPostError","createPost","post","createPostStart","createPostSuccess","createPostError"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAmC;AAC7DA,EAAAA,QAAQ,CAACH,WAAW,CAACI,aAAZ,EAAD,CAAR;AACAH,EAAAA,GAAG,CAACC,QAAJ,GACKG,IADL,CACWC,GAAD,IAAS;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,IAAR,EAAc;AACVN,MAAAA,QAAQ,CAACH,WAAW,CAACU,eAAZ,CAA4BJ,GAAG,CAACG,IAAhC,CAAD,CAAR;AACH;AACJ,GANL,EAOKE,KAPL,CAOYC,GAAD,IAAST,QAAQ,CAACH,WAAW,CAACa,aAAZ,CAA0BD,GAA1B,CAAD,CAP5B;AAQH,CAVM;AAYP,OAAO,MAAME,OAAO,GAAIC,EAAD,IAAiBZ,QAAD,IAAmC;AACtEA,EAAAA,QAAQ,CAACH,WAAW,CAACgB,YAAZ,EAAD,CAAR;AACAf,EAAAA,GAAG,CAACgB,WAAJ,CAAgBF,EAAhB,EACKV,IADL,CACWC,GAAD,IAASH,QAAQ,CAACH,WAAW,CAACkB,cAAZ,CAA2BZ,GAAG,CAACG,IAA/B,CAAD,CAD3B,EAEKE,KAFL,CAEYC,GAAD,IAAST,QAAQ,CAACH,WAAW,CAACmB,YAAZ,CAAyBP,GAAzB,CAAD,CAF5B;AAGH,CALM;AAOP,OAAO,MAAMQ,UAAU,GAAIC,IAAD,IAA2BlB,QAAD,IAAmC;AACnFA,EAAAA,QAAQ,CAACH,WAAW,CAACsB,eAAZ,EAAD,CAAR;AACArB,EAAAA,GAAG,CAACmB,UAAJ,CAAeC,IAAf,EACKhB,IADL,CACWC,GAAD,IAASH,QAAQ,CAACH,WAAW,CAACuB,iBAAZ,CAA8BjB,GAAG,CAACG,IAAlC,CAAD,CAD3B,EAEKE,KAFL,CAEYC,GAAD,IAAST,QAAQ,CAACH,WAAW,CAACwB,eAAZ,CAA4BZ,GAA5B,CAAD,CAF5B;AAGH,CALM","sourcesContent":["import * as blogActions from './blogActions';\nimport * as types from './blogTypes';\nimport * as API from '../../services/api';\n\nexport const getPosts = () => (dispatch: (any) => void): void => {\n    dispatch(blogActions.getPostsStart());\n    API.getPosts()\n        .then((res) => {\n            console.log(res);\n            if (res.data) {\n                dispatch(blogActions.getPostsSuccess(res.data));\n            }\n        })\n        .catch((err) => dispatch(blogActions.getPostsError(err)));\n};\n\nexport const getPost = (id: string) => (dispatch: (any) => void): void => {\n    dispatch(blogActions.getPostStart());\n    API.getPostById(id)\n        .then((res) => dispatch(blogActions.getPostSuccess(res.data)))\n        .catch((err) => dispatch(blogActions.getPostError(err)));\n};\n\nexport const createPost = (post: types.PostType) => (dispatch: (any) => void): void => {\n    dispatch(blogActions.createPostStart());\n    API.createPost(post)\n        .then((res) => dispatch(blogActions.createPostSuccess(res.data)))\n        .catch((err) => dispatch(blogActions.createPostError(err)));\n};\n"]},"metadata":{},"sourceType":"module"}