{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\nimport * as types from './blogTypes';\n\nvar posts = function posts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_POSTS_SUCCESS:\n      return action.payload.posts;\n\n    case types.CREATE_POST_SUCCESS:\n      return [].concat(_toConsumableArray(state), [action.payload.post]);\n\n    default:\n      return state;\n  }\n};\n\nvar post = function post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_POST_SUCCESS:\n      return action.payload.post;\n\n    default:\n      return state;\n  }\n};\n\nvar isError = function isError() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_POSTS_ERROR:\n    case types.GET_POST_ERROR:\n    case types.CREATE_POST_ERROR:\n      return action.payload.error;\n\n    case types.GET_POSTS_START:\n    case types.GET_POST_START:\n    case types.CREATE_POST_START:\n    case types.GET_POSTS_SUCCESS:\n    case types.GET_POST_SUCCESS:\n    case types.CREATE_POST_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nvar isLoading = function isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_POSTS_START:\n    case types.GET_POST_START:\n    case types.CREATE_POST_START:\n      return true;\n\n    case types.GET_POSTS_SUCCESS:\n    case types.GET_POST_SUCCESS:\n    case types.CREATE_POST_SUCCESS:\n    case types.GET_POSTS_ERROR:\n    case types.GET_POST_ERROR:\n    case types.CREATE_POST_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  posts: posts,\n  post: post,\n  isError: isError,\n  isLoading: isLoading\n});","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/redux/blog/blogReducers.ts"],"names":["combineReducers","types","posts","state","action","type","GET_POSTS_SUCCESS","payload","CREATE_POST_SUCCESS","post","GET_POST_SUCCESS","isError","GET_POSTS_ERROR","GET_POST_ERROR","CREATE_POST_ERROR","error","GET_POSTS_START","GET_POST_START","CREATE_POST_START","isLoading"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAA8D;AAAA,MAA7DC,KAA6D,uEAArD,EAAqD;AAAA,MAAjDC,MAAiD;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACK,iBAAX;AACI,aAAOF,MAAM,CAACG,OAAP,CAAeL,KAAtB;;AAEJ,SAAKD,KAAK,CAACO,mBAAX;AACI,0CAAWL,KAAX,IAAkBC,MAAM,CAACG,OAAP,CAAeE,IAAjC;;AAEJ;AACI,aAAON,KAAP;AARR;AAUH,CAXD;;AAaA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAA8D;AAAA,MAA7DN,KAA6D,uEAArD,IAAqD;AAAA,MAA/CC,MAA+C;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACS,gBAAX;AACI,aAAON,MAAM,CAACG,OAAP,CAAeE,IAAtB;;AAEJ;AACI,aAAON,KAAP;AALR;AAOH,CARD;;AAUA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAyD;AAAA,MAAxDR,KAAwD,uEAAhD,IAAgD;AAAA,MAA1CC,MAA0C;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACW,eAAX;AACA,SAAKX,KAAK,CAACY,cAAX;AACA,SAAKZ,KAAK,CAACa,iBAAX;AACI,aAAOV,MAAM,CAACG,OAAP,CAAeQ,KAAtB;;AAEJ,SAAKd,KAAK,CAACe,eAAX;AACA,SAAKf,KAAK,CAACgB,cAAX;AACA,SAAKhB,KAAK,CAACiB,iBAAX;AACA,SAAKjB,KAAK,CAACK,iBAAX;AACA,SAAKL,KAAK,CAACS,gBAAX;AACA,SAAKT,KAAK,CAACO,mBAAX;AACI,aAAO,IAAP;;AAEJ;AACI,aAAOL,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,IAAMgB,SAAS,GAAG,SAAZA,SAAY,GAAwD;AAAA,MAAvDhB,KAAuD,uEAA/C,KAA+C;AAAA,MAAxCC,MAAwC;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACe,eAAX;AACA,SAAKf,KAAK,CAACgB,cAAX;AACA,SAAKhB,KAAK,CAACiB,iBAAX;AACI,aAAO,IAAP;;AAEJ,SAAKjB,KAAK,CAACK,iBAAX;AACA,SAAKL,KAAK,CAACS,gBAAX;AACA,SAAKT,KAAK,CAACO,mBAAX;AACA,SAAKP,KAAK,CAACW,eAAX;AACA,SAAKX,KAAK,CAACY,cAAX;AACA,SAAKZ,KAAK,CAACa,iBAAX;AACI,aAAO,KAAP;;AAEJ;AACI,aAAOX,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeH,eAAe,CAAC;AAC3BE,EAAAA,KAAK,EAALA,KAD2B;AAE3BO,EAAAA,IAAI,EAAJA,IAF2B;AAG3BE,EAAAA,OAAO,EAAPA,OAH2B;AAI3BQ,EAAAA,SAAS,EAATA;AAJ2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport * as types from './blogTypes';\n\nconst posts = (state = [], action: types.actionsTypes): types.PostType[] => {\n    switch (action.type) {\n        case types.GET_POSTS_SUCCESS:\n            return action.payload.posts;\n\n        case types.CREATE_POST_SUCCESS:\n            return [...state, action.payload.post];\n\n        default:\n            return state;\n    }\n};\n\nconst post = (state = null, action: types.actionsTypes): types.PostType => {\n    switch (action.type) {\n        case types.GET_POST_SUCCESS:\n            return action.payload.post;\n\n        default:\n            return state;\n    }\n};\n\nconst isError = (state = null, action: types.actionsTypes): {} | null => {\n    switch (action.type) {\n        case types.GET_POSTS_ERROR:\n        case types.GET_POST_ERROR:\n        case types.CREATE_POST_ERROR:\n            return action.payload.error;\n\n        case types.GET_POSTS_START:\n        case types.GET_POST_START:\n        case types.CREATE_POST_START:\n        case types.GET_POSTS_SUCCESS:\n        case types.GET_POST_SUCCESS:\n        case types.CREATE_POST_SUCCESS:\n            return null;\n\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = false, action: types.actionsTypes): boolean => {\n    switch (action.type) {\n        case types.GET_POSTS_START:\n        case types.GET_POST_START:\n        case types.CREATE_POST_START:\n            return true;\n\n        case types.GET_POSTS_SUCCESS:\n        case types.GET_POST_SUCCESS:\n        case types.CREATE_POST_SUCCESS:\n        case types.GET_POSTS_ERROR:\n        case types.GET_POST_ERROR:\n        case types.CREATE_POST_ERROR:\n            return false;\n\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    posts,\n    post,\n    isError,\n    isLoading,\n});\n"]},"metadata":{},"sourceType":"module"}