{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\pages\\\\Posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Post from '../../components/Post/Post';\nimport * as blogSelectors from '../../redux/blog/blogSelectors';\nimport * as blogOperations from '../../redux/blog/blogOperations';\n\nconst PostPage = ({\n  postById,\n  getPost\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    getPost(id);\n  }, [getPost, id]);\n  return __jsx(React.Fragment, null, postById && __jsx(Post, {\n    post: postById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }\n  }));\n};\n\nconst mapStateToProps = store => ({\n  postById: blogSelectors.getPost(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPost: id => dispatch(blogOperations.getPost(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/Posts/[id].tsx"],"names":["React","useEffect","connect","useRouter","Post","blogSelectors","blogOperations","PostPage","postById","getPost","router","id","query","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AACA,OAAO,KAAKC,cAAZ,MAAgC,iCAAhC;;AAWA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwC;AACrD,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACE,EAAD,CAAP;AACH,GAFQ,EAEN,CAACF,OAAD,EAAUE,EAAV,CAFM,CAAT;AAIA,SAAO,4BAAGH,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAAP;AACH,CATD;;AAWA,MAAMK,eAAe,GAAIC,KAAD,KAAmC;AACvDN,EAAAA,QAAQ,EAAEH,aAAa,CAACI,OAAd,CAAsBK,KAAtB;AAD6C,CAAnC,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAoC;AAC3DP,EAAAA,OAAO,EAAGE,EAAD,IAAsBK,QAAQ,CAACV,cAAc,CAACG,OAAf,CAAuBE,EAAvB,CAAD;AADoB,CAApC,CAA3B;;AAIA,eAAeT,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Post from '../../components/Post/Post';\nimport * as blogSelectors from '../../redux/blog/blogSelectors';\nimport * as blogOperations from '../../redux/blog/blogOperations';\nimport * as types from '../../redux/blog/blogTypes';\n\ninterface MDTP {\n    getPost: (id: string) => void;\n}\n\ninterface MSTP {\n    postById: types.PostType;\n}\n\nconst PostPage = ({ postById, getPost }): JSX.Element => {\n    const router = useRouter();\n    const { id } = router.query;\n\n    useEffect(() => {\n        getPost(id);\n    }, [getPost, id]);\n\n    return <>{postById && <Post post={postById} />}</>;\n};\n\nconst mapStateToProps = (store: types.StoreType): MSTP => ({\n    postById: blogSelectors.getPost(store),\n});\n\nconst mapDispatchToProps = (dispatch: (any) => void): MDTP => ({\n    getPost: (id: string): void => dispatch(blogOperations.getPost(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);\n"]},"metadata":{},"sourceType":"module"}