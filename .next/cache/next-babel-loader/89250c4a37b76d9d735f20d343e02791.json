{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\components\\\\PostsList\\\\PostsList.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Post from '../Post/Post';\nimport { Wrapper, List } from './PostsList.styled';\n\nvar Posts = function Posts(_ref) {\n  var _ref$posts = _ref.posts,\n      posts = _ref$posts === void 0 ? [] : _ref$posts;\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, posts.map(function (post) {\n    return __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, __jsx(Post, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }));\n  }))));\n};\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/components/PostsList/PostsList.tsx"],"names":["React","Post","Wrapper","List","Posts","posts","map","post","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA6C;AAAA,wBAA1CC,KAA0C;AAAA,MAA1CA,KAA0C,2BAAlC,EAAkC;AACvD,SACI,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WACP,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYA,IAAI,CAACC,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADO;AAAA,GAAV,CADL,CADJ,CADJ,CADJ;AAaH,CAdD;;KAAMH,K;AAgBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport Post from '../Post/Post';\nimport * as types from '../../redux/blog/blogTypes';\nimport { Wrapper, List } from './PostsList.styled';\n\ninterface PostsArray {\n    posts: types.PostType[];\n}\n\nconst Posts = ({ posts = [] }: PostsArray): JSX.Element => {\n    return (\n        <>\n            <Wrapper>\n                <List>\n                    {posts.map((post: types.PostType) => (\n                        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n                            <Post key={post.id} post={post} />\n                        </Link>\n                    ))}\n                </List>\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}