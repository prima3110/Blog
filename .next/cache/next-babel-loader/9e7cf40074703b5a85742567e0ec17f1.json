{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\pages\\\\_app.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\n\n// import initialStore from '../redux/store';\nvar MyApp = function MyApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store;\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, null, \"Hello\")) // {\n\n  /* {<Component {...pageProps} />} */\n  // }\n  ;\n};\n\n_c = MyApp;\nexport default MyApp; //makeStore function that returns a new store for every request\n// const makeStore = () => initialStore;\n//withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/_app.tsx"],"names":["React","Provider","MyApp","props","Component","pageProps","store"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAqB;AAAA,MACvBC,SADuB,GACSD,KADT,CACvBC,SADuB;AAAA,MACZC,SADY,GACSF,KADT,CACZE,SADY;AAAA,MACDC,KADC,GACSH,KADT,CACDG,KADC;AAG/B,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oCADJ,CADJ,CAII;;AACA;AACA;AANJ;AAQH,CAXD;;KAAMJ,K;AAaN,eAAeA,KAAf,C,CAEA;AACA;AAEA;AACA","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\n// import initialStore from '../redux/store';\n\nconst MyApp = (props: any): any => {\n    const { Component, pageProps, store } = props;\n\n    return (\n        <Provider store={store}>\n            <>Hello</>\n        </Provider>\n        // {\n        /* {<Component {...pageProps} />} */\n        // }\n    );\n};\n\nexport default MyApp;\n\n//makeStore function that returns a new store for every request\n// const makeStore = () => initialStore;\n\n//withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}