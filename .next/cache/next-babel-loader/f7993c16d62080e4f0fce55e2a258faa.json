{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store'; // const MyApp = (props: any): any => {\n//     const { Component, pageProps, store } = props;\n//     console.log(props);\n//     return (\n//         <Provider store={store}>\n//             {/* <>Hello</> */}\n//             <Component {...pageProps} />\n//         </Provider>\n//         // {\n//         /* {<Component {...pageProps} />} */\n//         // }\n//     );\n// };\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _ref = this.props,\n          Component = _ref.Component,\n          pageProps = _ref.pageProps,\n          store = _ref.store;\n      console.log('this.props', this.props.pageProps);\n      return __jsx(React.Fragment, null) // <Provider store={store}>\n      //     <Component {...pageProps} />\n      // </Provider>\n      ;\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref2.Component, ctx = _ref2.ctx;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return Component.getInitialProps(ctx);\n\n              case 4:\n                _context.t0 = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                _context.t0 = {};\n\n              case 8:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App); // export default MyApp;\n//makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return initialStore;\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/_app.tsx"],"names":["React","App","withRedux","initialStore","MyApp","props","Component","pageProps","store","console","log","ctx","getInitialProps","makeStore"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,K;;;;;;;;;;;;;6BAOoB;AAAA,iBACsB,KAAKC,KAD3B;AAAA,UACVC,SADU,QACVA,SADU;AAAA,UACCC,SADD,QACCA,SADD;AAAA,UACYC,KADZ,QACYA,KADZ;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKL,KAAL,CAAWE,SAArC;AACA,aACI,2BADJ,CAEI;AACA;AACA;AAJJ;AAMH;;;;;;;;;;AAf8BD,gBAAAA,S,SAAAA,S,EAAWK,G,SAAAA,G;;qBACpBL,SAAS,CAACM,e;;;;;;uBAAwBN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,C;;;;;;;;8BAAiC,E;;;AAA/EJ,gBAAAA,S;iDAEC;AAAEA,kBAAAA,SAAS,EAAEA;AAAb,iB;;;;;;;;;;;;;;;;;;;EAJKN,G,GAmBpB;AAEA;;;AACA,IAAMY,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMV,YAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeD,SAAS,CAACW,SAAD,CAAT,CAAqBT,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store';\n\n// const MyApp = (props: any): any => {\n//     const { Component, pageProps, store } = props;\n//     console.log(props);\n//     return (\n//         <Provider store={store}>\n//             {/* <>Hello</> */}\n//             <Component {...pageProps} />\n//         </Provider>\n//         // {\n//         /* {<Component {...pageProps} />} */\n//         // }\n//     );\n// };\nclass MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return { pageProps: pageProps };\n    }\n\n    render(): JSX.Element {\n        const { Component, pageProps, store } = this.props as any;\n        console.log('this.props', this.props.pageProps);\n        return (\n            <></>\n            // <Provider store={store}>\n            //     <Component {...pageProps} />\n            // </Provider>\n        );\n    }\n}\n\n// export default MyApp;\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => initialStore;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}