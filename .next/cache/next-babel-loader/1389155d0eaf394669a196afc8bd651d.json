{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as blogSelectors from '../redux/blog/blogSelectors';\nimport * as blogOperations from '../redux/blog/blogOperations';\n\nconst App = props => {\n  useEffect(() => {\n    props.getPosts();\n  }, [props.getPosts]); // return <>{props.posts && <Posts posts={props.posts} />}</>;\n\n  return __jsx(React.Fragment, null, \"'FUCK!!!!'\");\n};\n\nconst mapStateToProps = store => ({\n  posts: blogSelectors.getPosts(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: () => dispatch(blogOperations.getPosts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/index.tsx"],"names":["React","useEffect","connect","blogSelectors","blogOperations","App","props","getPosts","mapStateToProps","store","posts","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B;AACA,OAAO,KAAKC,cAAZ,MAAgC,8BAAhC;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACC,QAAN;AACH,GAFQ,EAEN,CAACD,KAAK,CAACC,QAAP,CAFM,CAAT,CADmB,CAKnB;;AACA,SAAO,yCAAP;AACH,CAPD;;AASA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,KAAK,EAAEP,aAAa,CAACI,QAAd,CAAuBE,KAAvB;AADyB,CAAZ,CAAxB;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACtCL,EAAAA,QAAQ,EAAE,MAAYK,QAAQ,CAACR,cAAc,CAACG,QAAf,EAAD;AADQ,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Posts from '../components/PostsList/PostsList';\nimport * as blogSelectors from '../redux/blog/blogSelectors';\nimport * as blogOperations from '../redux/blog/blogOperations';\n\nconst App = (props) => {\n    useEffect(() => {\n        props.getPosts();\n    }, [props.getPosts]);\n\n    // return <>{props.posts && <Posts posts={props.posts} />}</>;\n    return <>'FUCK!!!!'</>;\n};\n\nconst mapStateToProps = (store) => ({\n    posts: blogSelectors.getPosts(store),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPosts: (): void => dispatch(blogOperations.getPosts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}