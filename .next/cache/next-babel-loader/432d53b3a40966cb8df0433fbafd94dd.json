{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\components\\\\Post\\\\Post.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PostBlock, Title, Body } from './Post.styled';\nimport * as blogSelectors from '../../redux/blog/blogSelectors';\nimport Loader from '../../components/Loader/Loader';\n\nconst Post = ({\n  post,\n  isLoading\n}) => {\n  return __jsx(React.Fragment, null, isLoading && __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 27\n    }\n  }), __jsx(PostBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, post.title), __jsx(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, post.body), post.comments && post.comments.length > 0 && __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 67\n    }\n  }, \"Comments: \"), post.comments && post.comments.length > 0 ? post.comments.map(el => __jsx(\"p\", {\n    key: el.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, el.id, \": \"), \" \", el.body)) : __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"No comments for this post\")));\n};\n\nconst mapStateToProps = store => ({\n  isLoading: blogSelectors.getLoader(store)\n});\n\nexport default connect(mapStateToProps)(Post);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/components/Post/Post.tsx"],"names":["React","connect","PostBlock","Title","Body","blogSelectors","Loader","Post","post","isLoading","title","body","comments","length","map","el","id","mapStateToProps","store","getLoader"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,eAAvC;AACA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAiD;AAC1D,SACI,4BACKA,SAAS,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,EAGQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACE,KAAb,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACG,IAAZ,CAFJ,EAGKH,IAAI,CAACI,QAAL,IAAiBJ,IAAI,CAACI,QAAL,CAAcC,MAAd,GAAuB,CAAxC,IAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHlD,EAIKL,IAAI,CAACI,QAAL,IAAiBJ,IAAI,CAACI,QAAL,CAAcC,MAAd,GAAuB,CAAxC,GACIL,IAAI,CAACI,QAAN,CAA4CE,GAA5C,CAAiDC,EAAD,IAC5C;AAAG,IAAA,GAAG,EAAEA,EAAE,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,EAAE,CAACC,EAAV,OADJ,OAC4BD,EAAE,CAACJ,IAD/B,CADJ,CADH,GAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAXR,CAHR,CADJ;AAqBH,CAtBD;;AAwBA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,SAAS,EAAEJ,aAAa,CAACc,SAAd,CAAwBD,KAAxB;AADqB,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBV,IAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { PostBlock, Title, Body } from './Post.styled';\nimport * as blogSelectors from '../../redux/blog/blogSelectors';\nimport * as types from '../../redux/blog/blogTypes';\nimport Loader from '../../components/Loader/Loader';\n\ninterface PropsPost {\n    post: types.PostType;\n    isLoading: boolean;\n}\n\nconst Post = ({ post, isLoading }: PropsPost): JSX.Element => {\n    return (\n        <>\n            {isLoading && <Loader />}\n            {\n                <PostBlock>\n                    <Title>{post.title}</Title>\n                    <Body>{post.body}</Body>\n                    {post.comments && post.comments.length > 0 && <h3>Comments: </h3>}\n                    {post.comments && post.comments.length > 0 ? (\n                        (post.comments as Array<types.CommentType>).map((el) => (\n                            <p key={el.id}>\n                                <span>{el.id}: </span> {el.body}\n                            </p>\n                        ))\n                    ) : (\n                        <h3>No comments for this post</h3>\n                    )}\n                </PostBlock>\n            }\n        </>\n    );\n};\n\nconst mapStateToProps = (store) => ({\n    isLoading: blogSelectors.getLoader(store),\n});\n\nexport default connect(mapStateToProps)(Post);\n"]},"metadata":{},"sourceType":"module"}