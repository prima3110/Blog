{"ast":null,"code":"export var GET_POSTS_START = 'GET_POSTS_START';\nexport var GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport var GET_POSTS_ERROR = 'GET_POSTS_ERROR';\nexport var GET_POST_START = 'GET_POST_START';\nexport var GET_POST_SUCCESS = 'GET_POST_SUCCESS';\nexport var GET_POST_ERROR = 'GET_POST_ERROR';\nexport var CREATE_POST_START = 'CREATE_POST_START';\nexport var CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport var CREATE_POST_ERROR = 'CREATE_POST_ERROR'; // general interfaces","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/redux/blog/blogTypes.ts"],"names":["GET_POSTS_START","GET_POSTS_SUCCESS","GET_POSTS_ERROR","GET_POST_START","GET_POST_SUCCESS","GET_POST_ERROR","CREATE_POST_START","CREATE_POST_SUCCESS","CREATE_POST_ERROR"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B,C,CAEP","sourcesContent":["export const GET_POSTS_START = 'GET_POSTS_START';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_ERROR = 'GET_POSTS_ERROR';\n\nexport const GET_POST_START = 'GET_POST_START';\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\nexport const GET_POST_ERROR = 'GET_POST_ERROR';\n\nexport const CREATE_POST_START = 'CREATE_POST_START';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR';\n\n// general interfaces\n\nexport interface CommentType {\n    postId: number;\n    body: string;\n    id: number;\n}\n\nexport interface PostType {\n    id: number;\n    title: string;\n    body: string;\n    comments?: CommentType[] | [];\n}\n\nexport interface StoreType {\n    blog: {\n        posts: PostType[] | [];\n        post: PostType | null;\n        isError: Record<string, unknown> | null;\n        isLoading: boolean;\n    };\n}\n\n// actions interfaces\nexport interface GetPostsStartType {\n    type: typeof GET_POSTS_START;\n}\n\nexport interface GetPostsSuccessType {\n    type: typeof GET_POSTS_SUCCESS;\n    payload: {\n        posts: PostType[];\n    };\n}\n\nexport interface GetPostsErrorType {\n    type: typeof GET_POSTS_ERROR;\n    payload: {\n        error: Record<string, unknown>;\n    };\n}\n\nexport interface GetPostStartType {\n    type: typeof GET_POST_START;\n}\n\nexport interface GetPostSuccessType {\n    type: typeof GET_POST_SUCCESS;\n    payload: {\n        post: PostType;\n    };\n}\n\nexport interface GetPostErrorType {\n    type: typeof GET_POST_ERROR;\n    payload: {\n        error: Record<string, unknown>;\n    };\n}\n\nexport interface CreatePostStartType {\n    type: typeof CREATE_POST_START;\n}\n\nexport interface CreatePostSuccessType {\n    type: typeof CREATE_POST_SUCCESS;\n    payload: {\n        post: PostType;\n    };\n}\n\nexport interface CreatePostErrorType {\n    type: typeof CREATE_POST_ERROR;\n    payload: {\n        error: Record<string, unknown>;\n    };\n}\n\nexport type actionsTypes =\n    | GetPostsStartType\n    | GetPostsSuccessType\n    | GetPostsErrorType\n    | GetPostStartType\n    | GetPostSuccessType\n    | GetPostErrorType\n    | CreatePostStartType\n    | CreatePostSuccessType\n    | CreatePostErrorType;\n"]},"metadata":{},"sourceType":"module"}