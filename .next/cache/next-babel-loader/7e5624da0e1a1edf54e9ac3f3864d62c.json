{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import React from 'react';\n// import App from 'next/app';\n// import { Provider } from 'react-redux';\n// import withRedux from 'next-redux-wrapper';\n// import store from '../redux/store';\n// // const MyApp = (props: any): any => {\n// //     const { Component, pageProps, store } = props;\n// //     console.log(props);\n// //     return (\n// //         <Provider store={store}>\n// //             {/* <>Hello</> */}\n// //             <Component {...pageProps} />\n// //         </Provider>\n// //         // {\n// //         /* {<Component {...pageProps} />} */\n// //         // }\n// //     );\n// // };\n// class MyApp extends App {\n//     static async getInitialProps({ Component, ctx }) {\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//         return { pageProps: pageProps };\n//     }\n//     render(): JSX.Element {\n//         const { Component, pageProps, store } = this.props as any;\n//         console.log('this.props', this.props);\n//         return (\n//             <Provider store={store}>\n//                 <Component {...pageProps} />\n//             </Provider>\n//         );\n//     }\n// }\n// // export default MyApp;\n// //makeStore function that returns a new store for every request\n// const makeStore = () => store;\n// //withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport withRedux from 'next-redux-wrapper';\nimport store from '../redux/store';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return (// <></>\n      __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      })))\n    );\n  }\n\n}\n\nconst makeStore = () => store;\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/_app.tsx"],"names":["App","Provider","React","withRedux","store","MyApp","getInitialProps","Component","ctx","pageProps","render","props","makeStore"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AACpB,eAAaM,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC7C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAAEC,MAAAA,SAAS,EAAEA;AAAb,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAgB;AAClB,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBL,MAAAA;AAAxB,QAAkC,KAAKO,KAA7C;AAEA,WACI;AACA,YAAC,QAAD;AAAU,QAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAFJ;AAMH;;AAhBmB;;AAmBxB,MAAMG,SAAS,GAAG,MAAMR,KAAxB;;AAEA,eAAeD,SAAS,CAACS,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["// import React from 'react';\n// import App from 'next/app';\n// import { Provider } from 'react-redux';\n// import withRedux from 'next-redux-wrapper';\n// import store from '../redux/store';\n\n// // const MyApp = (props: any): any => {\n// //     const { Component, pageProps, store } = props;\n// //     console.log(props);\n// //     return (\n// //         <Provider store={store}>\n// //             {/* <>Hello</> */}\n// //             <Component {...pageProps} />\n// //         </Provider>\n// //         // {\n// //         /* {<Component {...pageProps} />} */\n// //         // }\n// //     );\n// // };\n// class MyApp extends App {\n//     static async getInitialProps({ Component, ctx }) {\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n//         return { pageProps: pageProps };\n//     }\n\n//     render(): JSX.Element {\n//         const { Component, pageProps, store } = this.props as any;\n//         console.log('this.props', this.props);\n//         return (\n//             <Provider store={store}>\n//                 <Component {...pageProps} />\n//             </Provider>\n//         );\n//     }\n// }\n\n// // export default MyApp;\n\n// //makeStore function that returns a new store for every request\n// const makeStore = () => store;\n\n// //withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport withRedux from 'next-redux-wrapper';\nimport store from '../redux/store';\n\nclass MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return { pageProps: pageProps };\n    }\n\n    render(): JSX.Element {\n        const { Component, pageProps, store } = this.props as any;\n\n        return (\n            // <></>\n            <Provider store={store}>\n                <Component {...pageProps} />\n            </Provider>\n        );\n    }\n}\n\nconst makeStore = () => store;\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}