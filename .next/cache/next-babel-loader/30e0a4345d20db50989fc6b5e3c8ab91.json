{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\\\u0421\\u043F\\u0456\\u0432\\u0431\\u0435\\u0441\\u0456\\u0434\\u0430\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\\\\\\u041C\\u0435\\u043D\\u0456 \\u0437\\u0430\\u043F\\u0440\\u043E\\u043F\\u043E\\u043D\\u0443\\u0432\\u0430\\u043B\\u0438\\\\DevelopsToday\\\\Blog\\\\Blog\\\\components\\\\PostsList\\\\PostsList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Wrapper, List, PostBlock, Title, Body } from './PostsList.styled';\n\nconst Posts = ({\n  posts = []\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, posts.map(post => // <Post key={post.id} post={post} />\n  __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, \"View\")), __jsx(PostBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, post.title), __jsx(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, post.body), post.comments && post.comments.map(el => __jsx(\"p\", {\n    key: el.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  }, el.id, \": \"), \" \", el.body))))))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/components/PostsList/PostsList.tsx"],"names":["React","Link","Wrapper","List","PostBlock","Title","Body","Posts","posts","map","post","id","title","body","comments","el"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0CC,IAA1C,QAAsD,oBAAtD;;AAMA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAA6C;AACvD,SACI,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,GAAN,CAAWC,IAAD,IACP;AACA,8BACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACE,KAAb,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACG,IAAZ,CAFJ,EAIKH,IAAI,CAACI,QAAL,IACIJ,IAAI,CAACI,QAAN,CAA4CL,GAA5C,CAAiDM,EAAD,IAC5C;AAAG,IAAA,GAAG,EAAEA,EAAE,CAACJ,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,EAAE,CAACJ,EAAV,OADJ,OAC4BI,EAAE,CAACF,IAD/B,CADJ,CALR,CAJJ,CAFH,CADL,CANJ,CADJ,CADJ;AAgCH,CAjCD;;AAmCA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport Post from '../Post/Post';\nimport * as types from '../../redux/blog/blogTypes';\nimport { Wrapper, List, PostBlock, Title, Body } from './PostsList.styled';\n\ninterface PostsArray {\n    posts: types.PostType[];\n}\n\nconst Posts = ({ posts = [] }: PostsArray): JSX.Element => {\n    return (\n        <>\n            <Wrapper>\n                {/* <List>\n                    {posts.map((post: types.PostType) => (\n                        <Post key={post.id} post={post} />\n                    ))}\n                </List> */}\n                <List>\n                    {posts.map((post: types.PostType) => (\n                        // <Post key={post.id} post={post} />\n                        <>\n                            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n                                <a>View</a>\n                            </Link>\n                            <PostBlock>\n                                <Title>{post.title}</Title>\n                                <Body>{post.body}</Body>\n\n                                {post.comments &&\n                                    (post.comments as Array<types.CommentType>).map((el) => (\n                                        <p key={el.id}>\n                                            <span>{el.id}: </span> {el.body}\n                                        </p>\n                                    ))}\n                            </PostBlock>\n                        </>\n                    ))}\n                </List>\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}