{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store';\n\nvar MyApp = function MyApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store;\n  console.log(props);\n  return __jsx(React.Fragment, null) // <Provider store={store}>\n\n  /* <>Hello</> */\n  // <Component {...pageProps} />\n  // </Provider>\n  // {\n\n  /* {<Component {...pageProps} />} */\n  // }\n  ;\n}; // class MyApp extends App {\n//     static async getInitialProps({ Component, ctx }) {\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//         return { pageProps: pageProps };\n//     }\n//     render(): JSX.Element {\n//         const { Component, pageProps, store } = this.props as any;\n//         console.log('this.props', this.props);\n//         return (\n//             <></>\n//             // <Provider store={store}>\n//             //     <Component {...pageProps} />\n//             // </Provider>\n//         );\n//     }\n// }\n// export default MyApp;\n//makeStore function that returns a new store for every request\n\n\n_c = MyApp;\n\nvar makeStore = function makeStore() {\n  return initialStore;\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/GoIT/Співбесіда/Тестові завдання/Мені запропонували/DevelopsToday/Blog/Blog/pages/_app.tsx"],"names":["React","withRedux","initialStore","MyApp","props","Component","pageProps","store","console","log","makeStore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAqB;AAAA,MACvBC,SADuB,GACSD,KADT,CACvBC,SADuB;AAAA,MACZC,SADY,GACSF,KADT,CACZE,SADY;AAAA,MACDC,KADC,GACSH,KADT,CACDG,KADC;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SACI,2BADJ,CAEI;;AACA;AACA;AACA;AACA;;AACA;AACA;AARJ;AAUH,CAbD,C,CAcA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;KAnCMD,K;;AAoCN,IAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMR,YAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeD,SAAS,CAACS,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport initialStore from '../redux/store';\n\nconst MyApp = (props: any): any => {\n    const { Component, pageProps, store } = props;\n    console.log(props);\n    return (\n        <></>\n        // <Provider store={store}>\n        /* <>Hello</> */\n        // <Component {...pageProps} />\n        // </Provider>\n        // {\n        /* {<Component {...pageProps} />} */\n        // }\n    );\n};\n// class MyApp extends App {\n//     static async getInitialProps({ Component, ctx }) {\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n//         return { pageProps: pageProps };\n//     }\n\n//     render(): JSX.Element {\n//         const { Component, pageProps, store } = this.props as any;\n//         console.log('this.props', this.props);\n//         return (\n//             <></>\n//             // <Provider store={store}>\n//             //     <Component {...pageProps} />\n//             // </Provider>\n//         );\n//     }\n// }\n\n// export default MyApp;\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => initialStore;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}